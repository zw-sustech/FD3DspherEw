#******************************************************************************#
#*                        Compiler setting template                           *#
#*                                                                            *#
#*            Author: Wei ZHANG     Email: zhangwei.zw@gmail.com              *#
#*                       Copyright (C) 2006 Wei ZHANG                         *#
#******************************************************************************#

# $Date$
# $Revision$
# $LastChangedBy$

COMPILER := Intel
#COMPILER := PGI

#CPU := Athlon64
#CPU := Opteron
#CPU := OpteronE
#CPU := NewThanOpteron

#CPU := P4
#CPU := P4EM64T
CPU := XeonEM64T
#CPU := Core2
#CPU := NewThanCore2
#CPU := Itanium2

#CPU := unknown

ARCH := x86_64
#ARCH := x86

#######################################################################
#                        PGI compiler                                 #
#######################################################################
ifeq "$(COMPILER)" "PGI"
FC := /usr/mpich/bin/mpif90
NETCDF := /usr/netcdf

LDFLAGS := -L$(NETCDF)/lib -lnetcdf $(if $(STATIC),-Bstatic,) 
FFLAGS := -c -Mfree -module $(OBJDIR) -module $(NETCDF)/include \
  $(if $(WithOMP),-mp=align,)
FFLAGSMP := -Mnounroll -Mnovect $(FFLAGS)

ifeq "$(DEBUG)" "ON"
  FFLAGS   := -g $(FFLAGS)
  FFLAGSMP := -g $(FFLAGSMP)
else
FFLAGSMP := -O3 $(FFLAGSMP)
FFLAGS   := -O3 -Mdaz -Munroll=c:1 -Mlre -Mnoframe $(FFLAGS)

ifeq "$(CPU)" "$(filter $(CPU),Athlon64 Opteron OpteronE NewThanOpteron)"
  FFLAGS := -Mvect=sse -Mscalarsse -Mcache_align -Mflushz -Msmart $(FFLAGS)
endif
ifeq "$(CPU)" "$(filter $(CPU),P4 P4EM64T XeonEM64T Core2 NewThanCore2)"
  FFLAGS := -Mvect=sse -Mscalarsse -Mcache_align -Mflushz $(FFLAGS)
endif
endif # DEBUG

endif # PGI
#######################################################################
#                        Intel compiler                               #
#######################################################################
ifeq "$(COMPILER)" "Intel"
FC := /usr/mpich/bin/mpif90
NETCDF := /usr/netcdf

LDFLAGS := -L$(NETCDF)/lib -lnetcdf $(if $(STATIC),-Bstatic -static,)
FFLAGS := -c -w95 -warn all -zero -module $(OBJDIR) -I$(NETCDF)/include \
          $(if $(WithOMP),-openmp -openmp_report2,)
FFLAGSMP := -mp1 -unroll0 -ip-no-inlining $(FFLAGS)

ifeq "$(DEBUG)" "ON"
  FFLAGS   := $(if $(WithOMP),-O0,-g -debug extended -traceback -fp) $(FFLAGS)
  FFLAGSMP := $(if $(WithOMP),-O0,-g -debug extended -traceback -fp) $(FFLAGSMP)
else

FFLAGSMP := -O3 $(FFLAGSMP)
FFLAGS   := -O3 -ftz -align records -no-prec-div -unroll1 -ipo $(FFLAGS)
LDFLAGS  := -ipo $(LDFLAGS)

ifeq "$(CPU)" "$(filter $(CPU),P4)"
  FFLAGS := -xN -mtune=pentium4 $(FFLAGS)
endif
ifeq "$(CPU)" "$(filter $(CPU),P4EM64T XeonEM64T)"
  FFLAGS := -xP $(FFLAGS)
endif
ifeq "$(CPU)" "$(filter $(CPU),Core2 NewThanCore2)"
  FFLAGS := -xP $(FFLAGS)
endif
ifeq "$(CPU)" "$(filter $(CPU),Itanium2)"
  FFLAGS := -tpp2 -mtune=itanium2 $(FFLAGS)
endif
ifeq "$(CPU)" "$(filter $(CPU),opteron)"
  FFLAGS := -xW $(FFLAGS)
endif
endif #DEBUG

endif #Intel

# vim:ft=make:ts=4:sw=4:nu:et:ai:
